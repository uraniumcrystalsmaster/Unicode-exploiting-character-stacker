# -*- coding: utf-8 -*-
"""
Created on Sun Sep 10 21:03:48 2023

@author: Stavros Piliaris
Description: Creates tiny text on top of text without adding another line of text.
"""
def text_stacker(main_word, tiny_text_list):
    for i in range(len(main_word)):
        #display the main text
        print(main_word[i], end="")
        
        #display the small text
        for j in tiny_text_list:
            
            if "a" == j[i]:
                print(u"\u0363", end="")
            #elif "b" == tiny_text[i]:
            #    print(u"\u035A", end="")
            elif "c" == j[i]:
                print(u"\u0368", end="")
            elif "d" == j[i]:
                print(u"\u0369", end="")
            elif "e" == j[i]:
                print(u"\u0364", end="")
            elif "f" == j[i]:
                print(u"\u033F", end="")
            #elif "g" == j[i]:
            elif "h" == j[i]:
                print(u"\u036A", end="")
            elif "i" == j[i]:
                print(u"\u0365", end="")
            elif "j" == j[i]:
                print(u"\u031A", end="")
            elif "k" == j[i]:
                #print(u"\u0354", end="")
                print(u"\u1DFE", end="")
            elif "l" == j[i]:
                print(u"\u030D", end="")
            elif "m" == j[i]:
                print(u"\u036B", end="")
            elif "n" == j[i]:
                print(u"\u0346", end="")
            elif "o" == j[i]:
                print(u"\u0366", end="")
            #elif "p" == j[i]:
            #elif "q" == j[i]:
            elif "r" == j[i]:
                print(u"\u036C", end="")
            elif "s" == j[i]:
                print(u"\u033E", end="")
            elif "t" == j[i]:
                print(u"\u036D", end="")
            elif "u" == j[i]:
                print(u"\u0367", end="")
            elif "v" == j[i]:
                print(u"\u030C", end="")
            elif "w" == j[i]:
                print(u"\u0350", end="")
                print(u"\u0350", end="")
            elif "x" == j[i]:
                print(u"\u036F", end="")
            #elif "y" == j[i]:
            elif "z" == j[i]:
                print(u"\u035B", end="")
            elif "_" == j[i]:
                print(u"\u0305", end="")
            elif "-" == j[i]:
                print(u"\u035E", end="")
            elif "." == j[i]:
                print(u"\u0313", end="")
            elif ","== j[i]:
                print(u"\u030E", end="")
            elif "'" == j[i]:
                print(u"\u0315", end="")
            elif '"' == j[i]:
                print(u"\u030E", end="")
            elif '~' == j[i]:
                print(u"\u0303", end="")
            elif '(' == j[i]:
                print(u"\u0351", end="")
            elif ')' == j[i]:
                print(u"\u0357", end="")
            elif '|' == j[i]:
                print(u"\u030D", end="")
                
def main():
    
    #set up example
    example = "o" + u"\u0350" + u"\u0350" + u"\u036D"
    #get input from user for the number of small texts:
    while True:
        try:
            num_tiny_texts = int(input(f"Enter the number of small texts (at least one) you want above the main text:\n\n - Example with two number of small texts: {example}.\n"))
        except:
            print("Input not a number. Please try a different input.\n")
            continue
        if (num_tiny_texts > 0):
            break
    print()
    
    #get input from user for tiny top texts
    tiny_text_list = []
    invalid_chars = ["b","g","p","q","y"]
    for i in range(num_tiny_texts):
        valid = False
        while valid == False:
            tiny_text = str(input("Enter the higher small text that you want on top of the lower text: \n - Warning: the small text cannot contain letters: b,g,p,q, or y; and can only contain special characters: _, ,.,,,\",-,~,(,),|.\n - Warning: the small text cannot have less characters than any other small text.\n")).casefold()
            if any(invalid_char in tiny_text for invalid_char in invalid_chars):
                    print("Invalid character(s). Try again:\n")
                    valid = False
            else:
                tiny_text_list.append(tiny_text)
                valid = True
    print()
    
    #reverse list for correct tiny text ordering
    tiny_text_list.reverse()
        
    
    #get input from user for main bottom text
    main_word = str(input("\nEnter the main word:\n")).casefold()
    
    #set small text's alignment
    tiny_text_list_copy = tiny_text_list.copy()
    tiny_text_list_copy2 = tiny_text_list.copy()
    
    #left align
    for i in range(num_tiny_texts):
        while (len(tiny_text_list[i]) < len(main_word)):
            tiny_text_list[i] += " "
    left_aligned_list = tiny_text_list
    
    #center align
    for i in range(num_tiny_texts):
        tiny_text_list = tiny_text_list_copy
        while (len(tiny_text_list[i]) < len(main_word)):
            tiny_text_list[i] += " "
            tiny_text_list[i] = " " + tiny_text_list[i]
    #print(tiny_text_list[0])
    center_aligned_list = tiny_text_list
    
    #right align
    for i in range(num_tiny_texts):
        tiny_text_list = tiny_text_list_copy2 #reset list to original
        while (len(tiny_text_list[i]) < len(main_word)):
            tiny_text_list[i] = " " + tiny_text_list[i]
    right_aligned_list = tiny_text_list
    
    #display text with all three alignments
    ##prompt user to choose the small text's alignment (left, center, right)
    print()
    #print("Press 'enter' for the small text to be on the first letters of the main text.")
    for i in range(num_tiny_texts//2):
        print()
    print("Left-aligned result: ", end="") 
    text_stacker(main_word,left_aligned_list)
    print()
    print()
    #print("Press 'c' then 'enter' for the small text to be on the center letters of the main text.")
    for i in range(num_tiny_texts//2):
        print()
    print("Center-aligned result: ", end="")
    text_stacker(main_word,center_aligned_list)
    print()
    print()
    #print("Press 'r' then 'enter' for the small text to be on the last letters of the main text.")
    for i in range(num_tiny_texts//2):
        print()
    print("Right-aligned result: ", end="")
    text_stacker(main_word,right_aligned_list)
    print()
    print()
    #alignment = str(input()).casefold()

    #display the text
    #text_stacker(main_word,tiny_text_list)

if __name__ == "__main__":
    main()